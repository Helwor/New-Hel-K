-- by Helwor, license GNU GPL, v2 or later
-- autogenerated by code see below the table
if WG.aim_from_pieces_2 then
	return WG.aim_from_pieces_2
end
WG.aim_from_pieces_2 = {
	amphaa = "torso",
	amphassault = "turret",
	amphfloater = "barrel",
	amphimpulse = "aimpoint",
	amphlaunch = "pelvis",
	amphraid = "head",
	amphriot = "flaremain",
	amphsupport = "aimfrom",
	armcom = "torso",
	benzcom = "torso",
	bomberassault = "bombEmit",
	bomberdisarm = "Drop",
	bomberheavy = "drop",
	bomberprec = "drop",
	bomberstrike = "flaremissiler",
	chicken = "head",
	chicken_blimpy = "dodobomb",
	chicken_digger = "head",
	chicken_leaper = "head",
	chicken_pigeon = "head",
	chicken_rafflesia = "body",
	chicken_shield = "firepoint",
	chicken_spidermonkey = "head",
	chicken_sporeshooter = "head",
	chickenblobber = "head",
	chickenc = "head",
	chickend = "firepoint",
	chickenf = "head",
	chickenr = "head",
	chickens = "head",
	chickenspire = "firepoint",
	chickenwurm = "fire",
	cloakaa = "head",
	cloakarty = "center",
	cloakassault = "aim",
	cloakheavyraid = "head",
	cloakraid = "head",
	cloakriot = "chest",
	cloakskirm = "gunemit",
	cloaksnipe = "shoulderr",
	commrecon = "armhold",
	commsupport = "armhold",
	corcom_alt = "torso",
	cremcom = "torso",
	cruisemissile = "base",
	dronecarry = "gunpod",
	dronefighter = "DroneMain",
	droneheavyslow = "base",
	dronelight = "base",
	dynassault = "pelvis",
	dynknight = "torso",
	dynrecon = "head",
	dynstrike = "Shield",
	dynsupport = "head",
	grebe = "aimpoint",
	gunshipaa = "base",
	gunshipassault = "body",
	gunshipemp = "housing",
	gunshipheavyskirm = "eye",
	gunshipraid = "gun",
	gunshipskirm = "base",
	hoveraa = "turret",
	hoverarty = "aim",
	hoverassault = "turret",
	hoverdepthcharge = "pads",
	hoverheavyraid = "turret",
	hoverminer = "flare",
	hoverraid = "turret",
	hoverriot = "barrel",
	hovershotgun = "turret",
	hoverskirm = "turret",
	jumpaa = "torso",
	jumparty = "aim",
	jumpassault = "ram",
	jumpblackhole = "chest",
	jumpcon = "torso",
	jumpraid = "low_head",
	jumpscout = "gun",
	jumpskirm = "head",
	mahlazer = "SatelliteMuzzle",
	planefighter = "base",
	planeheavyfighter = "base",
	pw_hq = "drone",
	pw_wormhole = "drone",
	pw_wormhole2 = "drone",
	raveparty = "spindle",
	roost = "emit",
	shieldaa = "pod",
	shieldarty = "pelvis",
	shieldassault = "head",
	shieldfelon = "shot1",
	shieldraid = "head",
	shieldriot = "torso",
	shieldskirm = "popup",
	shiparty = "turret",
	shipcarrier = "Radar",
	shipscout = "missile",
	shipskirm = "turret",
	shiptorpraider = "Turret",
	spideraa = "turret",
	spideranarchid = "aim",
	spiderantiheavy = "turret",
	spiderassault = "turret",
	spidercrabe = "turret",
	spideremp = "turret",
	spiderriot = "barrel",
	spiderscout = "turret",
	spiderskirm = "box",
	starlight_satellite = "SatelliteMuzzle",
	staticantinuke = "aimpoint",
	staticarty = "turret",
	staticheavyarty = "query",
	striderantiheavy = "head",
	striderarty = "launchers",
	striderdante = "torso",
	striderdozer = "base",
	subraider = "firepoint",
	subtacmissile = "aimpoint",
	tankaa = "aim",
	tankarty = "barrel",
	tankassault = "turret",
	tankcon = "turret",
	tankheavyarty = "triple",
	tankheavyraid = "turret",
	tankraid = "turret",
	tankriot = "sleeve",
	turretaaclose = "turret",
	turretaafar = "mc_rocket_ho",
	turretaaflak = "trueaim",
	turretaaheavy = "turret",
	turretaalaser = "aim",
	turretantiheavy = "barrel",
	turretemp = "aim",
	turretgauss = "AimProxy",
	turretheavylaser = "holder",
	turretimpulse = "center",
	turretlaser = "barrel",
	turretmissile = "pod",
	turretriot = "turret",
	turretsunlance = "breech",
	turrettorp = "turret",
	vehaa = "firepoint",
	veharty = "swivel",
	vehassault = "turret",
	vehcapture = "flare",
	vehraid = "turret",
	vehriot = "turret",
	vehscout = "turret",
	vehsupport = "aim",
	wolverine_mine = "bomblet1",
	zenith = "firept",
	assaultcruiser = {
		[1] = "base",
		[2] = "flturret",
		[3] = "frturret",
		[4] = "slturret",
		[5] = "srturret",
		[6] = "mlturret",
		[7] = "mrturret",
	},
	chicken_dragon = {
		[1] = "firepoint",
		[2] = "spike1",
		[3] = "spike2",
		[4] = "spike3",
		[5] = "firepoint",
		[6] = "body",
	},
	chicken_roc = {
		[1] = "firepoint",
		[2] = "spore1",
		[3] = "spore2",
	},
	chicken_tiamat = {
		[1] = "firepoint",
		[2] = "spike2",
		[3] = "firepoint",
		[4] = "body",
	},
	chickena = {
		[1] = "head",
		[2] = "body",
	},
	chickenbroodqueen = {
		[1] = "firepoint",
		[2] = "spike1",
		[3] = "spike2",
		[4] = "spike3",
		[5] = "firepoint",
	},
	chickenflyerqueen = {
		[1] = "firepoint",
		[2] = "spore1",
		[3] = "spore2",
		[4] = "spore3",
		[5] = "body",
		[6] = "body",
		[7] = "body",
	},
	chickenlandqueen = {
		[1] = "firepoint",
		[2] = "firepoint",
		[3] = "spore1",
		[4] = "spore2",
		[5] = "spore3",
		[6] = "body",
		[7] = "body",
		[8] = "body",
		[9] = "body",
	},
	commstrike = {
		[1] = "Shield",
		[5] = "Palm",
	},
	gunshipheavytrans = {
		[1] = "RTurretBase",
		[2] = "LTurretBase",
		[3] = "FrontTurret",
	},
	gunshipkrow = {
		[1] = "RightTurretSeat",
		[2] = "LeftTurretSeat",
		[3] = "subpoint",
		[4] = "RearTurretSeat",
	},
	jumpsumo = {
		[1] = "b_eye",
		[2] = "l_turret",
		[3] = "r_turret",
		[4] = "l_turret",
		[5] = "r_turret",
	},
	nebula = {
		[1] = "turret1",
		[2] = "turret2",
		[3] = "turret3",
		[4] = "turret4",
	},
	shipaa = {
		[1] = "fturret",
		[2] = "bturret",
	},
	shipassault = {
		[1] = "turret",
		[2] = "missile1",
	},
	shipheavyarty = {
		[1] = "turret1",
		[2] = "turret2",
		[3] = "turret3",
	},
	shipriot = {
		[1] = "gunb",
		[2] = "gunf",
	},
	striderbantha = {
		[1] = "headflare",
		[2] = "torso",
		[3] = "headflare",
	},
	striderdetriment = {
		[1] = "larmcannon",
		[2] = "rarmcannon",
		[3] = "AAturret",
		[4] = "headlaser2",
		[5] = "shouldercannon",
		[6] = "lfoot",
	},
	striderscorpion = {
		[1] = "body",
		[2] = "tailgun",
		[3] = "tailgun",
		[4] = "gunl",
		[5] = "gunr",
	},
	tankheavyassault = {
		[1] = "turret1",
		[2] = "turret2",
	},
	turretheavy = {
		[1] = "cannonAim",
		[2] = "HeatrayBase",
	},
}

return WG.aim_from_pieces_2
--[[ table generated with the code below, load unit script lua or cob to get the AimFrom[Weapon1...|Primary...] returns and write them down
local copy = function(t)
	local t2 = {}
	for k,v in pairs(t) do t2[k] = v end
	return t2
end
local function GetAimFromPiece(def)
	-- Echo('trying', def.name)
	-- dealing with .bos
	if not def.scriptName:find('.lua$') then
		local file = def.scriptName:find('.cob$') and def.scriptName:sub(1,-4) .. 'bos'
		if file and VFS.FileExists(file) then
			local code = VFS.LoadFile(file)
			code = ' ' .. code
			local pieces = {}
			-- Echo("file is ", file)
			local pos, endPos = code:find('[ \r\n]piece[ ]([^;]+);')
			while pos do
				code:sub(pos, endPos):gsub('%w+', function(word) pieces[word] = true end)
				pos, endPos = code:find('[ \r\n]piece[ ]([^;]+);', endPos+1)
			end
			local t = {}
			for weapNum, piece in code:gmatch('[ \r\n]AimFrom(%w+)[^{]+{.-piecenum.-=.-(%w+)') do
				if weapNum == 'Primary' then
					weapNum = 1
				elseif weapNum == 'Secondary' then
					weapNum = 2
				elseif weapNum:find('Weapon%d') then
					weapNum = tonumber(weapNum:match('%d+'))
				end
				if tonumber(weapNum) and pieces[piece] then
					t[tonumber(weapNum)] = piece
				end
			end
			local common = {}
			for i, piece in pairs(t) do
				common[piece] = true
			end
			if table.size(common) == 1 then
				return select(2, next(t))
			elseif next(t) then
				return t
			end

		end
		return
	end
	-- simulate an env so the scripts won't break, we only want to trigger script.AimFromWeapon function
	local env = copy(getfenv())
	env.piece = function(...) return ... end
	env.script = {}
	env.GG = {}
	env.x_axis = 1
	env.y_axis = 2
	env.z_axis = 3

	env.Spring = copy(Spring)
	env.Spring.GetUnitPieceMap = function() return Spring.GetModelPieceMap(def.modelname) end
	env.Spring.GetUnitDefID = function() return def.id end
	env.Spring.GetUnitBasePosition = function() return 0,0,0 end
	env.Spring.SetUnitWeaponState = function() end
	env.Spring.MoveCtrl = {}
	env.Spring.UnitScript = {}
	env.unitDefID = def.id
	env.UnitDef = def
	env.include = function(path) return VFS.Include('scripts/'..path, env) end
	--
	VFS.Include(def.scriptName, env)
	--
	if env.script.AimFromWeapon then
		local t = {}
		local common = {}
		for i, weap in ipairs(def.weapons) do
			local wDef = WeaponDefs[weap.weaponDef]
			local weaponRange = tonumber(wDef.customParams.combatrange) or wDef.range
			if weaponRange > 32 then
				local piece = env.script.AimFromWeapon(i)
				common[piece] = true
				t[i] = piece
				-- Echo('test weap ' .. i, t[i])
			end
		end
		if table.size(common) == 1 then
			-- Echo(select(2, next(t)))
			return select(2, next(t))
		elseif next(t) then
			-- Echo(f.vunpack(t))
			return t
		end
	else
		-- Echo('no aim from')
	end
end
VFS.Include(LUAUI_DIRNAME .. '/Widgets/Include/aim_from_pieces_2.lua')
local ret = {}
for defID, def in pairs(UnitDefs) do -- done in 2 seconds and eating ~=50 MB while doing so
	local script = def.scriptName:match('/(.*)%....')
	if not ret[script] then
		ret[script] = GetAimFromPiece(def)
	end
end
table.save(ret, LUAUI_DIRNAME .. '/Widgets/Include/aim_from_pieces_2.lua')

]]